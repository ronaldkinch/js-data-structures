// Generated by CoffeeScript 1.10.0
var LinkedList, Node;

Node = (function() {
  function Node(value) {
    this.value = value;
    this.next = null;
    this.prev = null;
  }

  return Node;

})();

LinkedList = (function() {
  function LinkedList() {
    this.head = null;
  }

  LinkedList.prototype.toString = function() {
    var node, str;
    if (this.head == null) {
      return 'nil';
    }
    str = [];
    node = this.head;
    while (node != null) {
      str.push(node.value || 'nil');
      node = node.next;
    }
    return str.join(', ');
  };

  LinkedList.prototype.insert = function(node) {
    node.next = this.head;
    node.prev = null;
    if (this.head != null) {
      this.head.prev = node;
    }
    return this.head = node;
  };

  LinkedList.prototype.search = function(value) {
    var node;
    node = this.head;
    while (node != null) {
      if (node.value === value) {
        return node;
      }
      node = node.next;
    }
    return node || 'nil';
  };

  LinkedList.prototype.remove = function(node) {
    if (node == null) {
      return node.value || 'nil';
    }
    if (this.search(node.value) === 'nil') {
      return 'nil';
    }
    if (node.next != null) {
      node.next.prev = node.prev;
    }
    if (node.prev != null) {
      node.prev.next = node.next;
    } else {
      if (node.next != null) {
        this.head = node.next;
      }
    }
    return node.value || 'nil';
  };

  return LinkedList;

})();

module.exports = {
  LinkedList: LinkedList,
  Node: Node
};
